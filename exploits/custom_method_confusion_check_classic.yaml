name: "custom_method_confusion_check_classic" 
poc_source: "https://github.com/sgxgsx/bluetoothexploits/tree/main/custom_exploits"
cve: "CVE-2020-10134"
affected: ""
profile: "BR/EDR"
type: "PoC - MitM"
mass_testing: true
max_timeout: -1
bt_version_min: 2.1
bt_version_max: 5.2
hardware: "hci"
command: "bluekit_method_confusion_check.py"
file_type: "python3"
parameters:
  - name: "--target"
    name_required: true
    help: "Target MAC address"
    required: true
    parameter_connector: " "
directory: "bluekit/"
description: "This script checks for a Bluetooth vulnerability known as Method Confusion by evaluating the pairing capabilities of a target device. It retrieves the target devices pairing capability to determine if it is set to DisplayYesNo or another method. If the device uses a pairing method other than DisplayYesNo (such as NoInputNoOutput or KeyboardOnly), the device is flagged as vulnerable. These alternative methods lack adequate user verification, making them susceptible to Man-in-the-Middle (MitM) attacks during pairing, as they permit pairing with less stringent authentication. If the device capability is unknown or the pairing method is DisplayYesNo, it is considered secure and resistant to this type of MitM vulnerability."